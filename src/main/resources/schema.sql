-- 1. Сначала таблицы БЕЗ внешних ключей (основные сущности)
-- Рейтинги MPA
CREATE TABLE IF NOT EXISTS mpa_ratings (
    mpa_id BIGINT PRIMARY KEY,
    name VARCHAR(10) NOT NULL,
    description VARCHAR(255)
);

-- Жанры фильмов
CREATE TABLE IF NOT EXISTS genres (
    genre_id BIGINT PRIMARY KEY,
    name VARCHAR(50) NOT NULL
);

-- Пользователи
CREATE TABLE IF NOT EXISTS users (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 100) PRIMARY KEY,
    email VARCHAR(100) NOT NULL UNIQUE,
    login VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100),
    birthday DATE
);

-- Режиссеры
CREATE TABLE IF NOT EXISTS directors (
    director_id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 100) PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


-- 2. Затем таблицы, которые зависят от уже созданных
-- Фильмы
CREATE TABLE IF NOT EXISTS films (
    film_id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 100) PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(255),
    release_date DATE,
    duration INTEGER,
    mpa_id BIGINT REFERENCES mpa_ratings (mpa_id)
);

-- 3. В конце - таблицы связей (многие-ко-многим)
-- Жанры фильмов
CREATE TABLE IF NOT EXISTS film_genre (
    film_id BIGINT REFERENCES films (film_id) ON DELETE CASCADE,
    genre_id BIGINT REFERENCES genres (genre_id),
    PRIMARY KEY (film_id, genre_id)
);

-- Режиссёры фильмов
CREATE TABLE IF NOT EXISTS film_directors (
    film_id BIGINT REFERENCES films (film_id) ON DELETE CASCADE,
    director_id BIGINT REFERENCES directors (director_id),
    PRIMARY KEY (film_id, director_id)
);

-- Друзья
CREATE TABLE IF NOT EXISTS friends (
    user_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    friend_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    confirmed BOOLEAN DEFAULT FALSE,
    PRIMARY KEY (user_id, friend_id)
);

-- Лайки
CREATE TABLE IF NOT EXISTS likes (
    film_id BIGINT REFERENCES films (film_id) ON DELETE CASCADE,
    user_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, user_id)
);

-- Отзывы
CREATE TABLE IF NOT EXISTS reviews (
    review_id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 100) PRIMARY KEY,
    content VARCHAR(1000) NOT NULL,
    is_positive BOOLEAN NOT NULL,
    user_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    film_id BIGINT REFERENCES films (film_id) ON DELETE CASCADE,
    rating INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Рейтинг отзывов
CREATE TABLE IF NOT EXISTS review_likes (
    review_id BIGINT REFERENCES reviews (review_id) ON DELETE CASCADE,
    user_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    is_like BOOLEAN NOT NULL,
    PRIMARY KEY (review_id, user_id),
    UNIQUE (review_id, user_id)
);