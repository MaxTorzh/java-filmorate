--Фильмы
CREATE TABLE IF NOT EXISTS films (
    film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(255),
    release_date DATE,
    duration INTEGER,
    mpa_id INTEGER REFERENCES mpa_ratings (mpa_id)
);

--MPA рейтинги
CREATE TABLE IF NOT EXISTS mpa_ratings (
    mpa_id INTEGER PRIMARY KEY,
    name VARCHAR(10) NOT NULL,
    description VARCHAR(255)
);

--Жанры
CREATE TABLE IF NOT EXISTS genres (
    genre_id INTEGER PRIMARY KEY,
    name VARCHAR(50) NOT NULL
);

--Связь фильмов и жанров (многие к многим)
CREATE TABLE IF NOT EXISTS film_genre (
    film_id INTEGER REFERENCES films (film_id) ON DELETE CASCADE,
    genre_id INTEGER REFERENCES genres (genre_id),
    PRIMARY KEY (film_id, genre_id)
);

--Пользователи
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(100) NOT NULL,
    login VARCHAR(50) NOT NULL,
    name VARCHAR(100),
    birthday DATE
);

-- Друзья (односторонняя связь)
CREATE TABLE IF NOT EXISTS friends (
    user_id INTEGER REFERENCES users (user_id) DELETE ON CASCADE,
    friend_id INTEGER REFERENCES users (user_id) DELETE ON CASCADE,
    PRIMARY KEY (user_id, friend_id)
);

--Лайки фильмов
CREATE TABLE IF NOT EXISTS likes (
    film_id INTEGER REFERENCES films (film_id) ON DELETE CASCADE,
    user_id INTEGER REFERENCES users (user_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, user_id)
);